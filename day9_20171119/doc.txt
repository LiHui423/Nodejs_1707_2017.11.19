1. 创建目录 day9
2. 创建 sql 文件 db.sql，建库 db_demo 建表 user: id/username/password
3. day9 目录下执行 cmd: npm init 创建项目的配置文件 package.json
  3.1 进入 day9 目录，按 shift 键，鼠标右键，选“在此处打开命令窗口”
  3.2 在 Webstorm 里，按 Alt + F12 进入终端
4. 创建文件 day9/index.js
5. 安装 package：mysql、express，项目目录下执行命令 cmd: cnpm install --save mysql express
  5.1 安装淘宝npm镜像 cnmp 任意 cmd: npm install -g cnpm --registry=https://registry.npm.taobao.org
6. 安装到全局 package，任意 cmd: cnpm install -g mysql express
7. 在 index.js 里编写代码，示例代码
8. 创建目录和文件: public/index.html
  8.1 用户登录的表单
  8.2 用户注册的链接
9. 修改 index.js 处理网站的根目录请求，返回响应是页面跳转到网站首页-登录页面 public/index.html
10. 创建文件: public/sign-up.html，有一个用户注册的表单
11. 链接跳转改为 href="/sign-up"
12. 链接跳转的请求处理: app.get('/sign-up',(req, res)=>{//...}); 跳转到了 public/sign-up.html 页面
13. 安装全局 package，cmd: cnpm install -g supervisor，作用是热部署
14. 停止原来的服务，在项目 index.js 所在目录处，执行命令 cmd: supervisor index.js
15. 用户发出注册请求，<form action="/signUp" method="post">
16. 修改 index.js 文件，添加对 /signUP 请求的接受 app.post('/signUp', ()=>{});
17. 处理请求，先取得用户填写的表单信息：用户名和密码
18. 安装项目依赖 body-parser，项目目录下 cmd: cnpm install --save body-parser
19. 修改 index.js，添加 body-parser，app.use(bodyParser.urlencoded());
20. 取得用户填写的表单信息: req.body.username，req.body.password
21. 引入 mysql package
22. 创建数据库连接池 pool = mysql.createPool();
23. 从连接池中取出一个连接，执行语句 insert...
24. 根据 results.affectedRows 判断执行结果：
	24.1 注册成功，页面跳转到 index.html
	24.2 注册失败，页面跳转到 sign-up.html










